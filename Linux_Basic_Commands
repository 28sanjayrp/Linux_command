Execute Basic Linux Commands:

Objective: To execute the basic Linux commands.

Tools required: Ubuntu - Terminal

Commands - description

1)$ls > to list the files or folders present in the directory.

2)$ls -l > long list

3)$mkdir > to create a new directory in the corrent folder
  ex-$mkdir <directory name> -> $mkdir Projet1
to check whether the folder is created or not use $ls command

4)cd (change directory) > to navigate to the folders or directories by changing the corrent directory.
  ex-$cd <directoryname> -> $cd Project1

5)$echo > displays the content that we mentions
  ex - $echo "Execute Basic Linux Commands"
      display- Execute Basic Linux Commands
  by using echo we can also write some text in files, and to display we can $cat the file.
 i.e - $echo "this is a demo file" > demo.txt
       $cat demo.txt

6)$cat -> to read any file or to view the content of the file.
  ex -$cat <file name> -> $ cat demo.txt

7)$touch -> to create a new file.
  ex - $touch <file name> -> $touch file1.txt
  ex - $touch <file1> <file2> ...

8)$rm -> to remove or delete the file from the folder or directory
  ex -$rm <file name> -> $rm demo.txt

9)$rmdir -> to remove or delete the directory or folder.
  ex -$rmdir <directory name> -> $rmdir Project1

10)$sudo su -to change the corrent user a super/root user.
  ex - $sudo su

11)$mv - to move or rename the file or derectory.
  ex - to move - $mv <file_name> <destination folder>  - $mv file1.txt /new project/Project2/
  ex - to move directory - $mv <source_directory> <destination_directory> - $mv /project1/app1/code /project2/app1
  ex - to rename - $mv <filename_tobechange> <new file name> - $mv file1.txt file.txt
  ex - to remame - syntax - $mv <old_dir_name> <new_dir_name> - $mv d1 d1_new

  Note - If you compare the $mv command with the $cp command, you see that the $mv command deletes the 
	source location when it moves the files or directories to the destination location.

12)$rm -r -> to remove all the contents in the directory and directory as well.
  ex - $rm -r Project1

13)$clear -> to clear the terminal screen.
  ex - $clear

14)$apt-get -> A package manager to install, remove, and upgrade software packages.
 ex - $apt-get update
 ex - $apt-get install git -y
 ex - $apt-get remove git -y

15)$history - to list all the previosly used commands.
  ex -$history

16)$chmod - Command to change a file mode to r â€“ read, w- write, or x- execute
  ex - $chmod u+x file1.txt - "u" stands for user, gives the execute permition to user
  ex - $chmod 777 file.txt  - another method of giving the permition, 777 is permition code which means gives all 3 permitions to all(user, group, and others)
  ex - $chmod g-x file.txt  - that removes the execute permition of group user.

17)$chown - to change the ownership of a file or folder.
  ex - $chown 

18)$vi - to open file in text editor or to create a new file which open in text editor mode.
  ex - $vi file.txt - opens a existing file in editor mode.
  ex - $vi test.txt - opens a new file in a editor mode.

19)$tar -cvzf -> to compress or zip a folder.
  ex - $tar -cvzf <foldername>.tar.gz <newname> - $tar -cvzf test.tar.gz tar newtestFolder

20)$tar -xvzf -> to extract or unzip the folder.
  ex - $tar -xvzf <ziped folder> -> $tar -xvzf test.tar.gz

21)$ln -s -> to create a softlink -> softlinks are kind of a links which directly points to the destination file or folder from anywhere.
  for ex let us assume we have folders Poject1 inside that another folder app1 inside that we have our code.html file.
  so inorder to avoide cd to inside folder every time we can create a soft link where in one go we can direct to the file or folder.
  let create softlink for file - $ln -s /project1/app1/code.html html_code
  now we can use $cat or vi html_code to to view the code or edit.

22)$cp -> to copy the files from one location to another.
  ex - copy in a same directory -  $cp <existing_filename> <new file name>  -> $cp file.txt file2.txt
  ex - copy to different directory - $cp <existing file name> <destination directory> - $cp text.txt /project1/app1/

   --> The copy command of a directory is similar to the copy command of a file.
       The option -r will recursively copy the contents of the source directory to the destination directory.
	ex - syntax - cp -r <source_dir> <destination_dir>
		   ex - cp -r d1 d2

23)$pwd - used to display the location of the current working directory. 
  ex - $pwd 

24)$head - > The head command is used to display the content of a file. It displays the first 10 lines of a file.
  ex - $head <filename> -> $head demo.txt


25)$tail - The tail command is similar to the head command. The difference between both commands is that it displays the last ten lines of the file content. 
           It is useful for reading the error message.
  ex - if we have a 100 lines of code then it displays last 10 lines i.e 90-100.
      $tail <failname> --> $tail demo.txt

26)$tac - > The tac command is the reverse of cat command, as its name specified. It displays the file content in reverse order (from the last line).
  ex - $tac <file name> --> $tac demo.txt

27)$su - The su command provides administrative access to another user. In other words, it allows access of the Linux shell to another user.
  ex - $su <user name>  -> $su ec2-user
                     password:

28)$id - The id command is used to display the user ID (UID) and group ID (GID).
  ex - $id

29)useradd - > The useradd command is used to add or remove a user on a Linux server.
  ex - $useradd <username> -> $sudo useradd sanjay

30)$passwd - The passwd command is used to create and change the password for a user.
  ex - passwd username>  - $sudo passwd sanjay
              Enter a new password:
              Retype a new password

31)$groupadd -  The groupadd command is used to create a user group.
  ex - $groupadd <group name> ->  sudo groupadd developer

32)$cut -  The cut command is used to select a specific column of a file. The '-d' option is used as a delimiter, and it can be a space (' '), 
           a slash (/), a hyphen (-), or anything else. And, the '-f' option is used to specify a column number.
  ex - $cut -d(specify delimiter) -f(specify colunm nember) <filename>
    ex - file1.txt has - sanjay-40
                         chetan-50
			vinay-90
			ravi-70
  if we use $cut -d- -f2 file1.txt
  o/p - 40
	50
	90
	70

33)$grep - The grep is the most powerful and used filter in a Linux system. 
	The 'grep' stands for "global regular expression print." 
	It is useful for searching the content from a file. Generally, it is used with the pipe(|).
  ex -$cat file1.txt | grep 90
    it will highlight the text if it exists.

34)$tr - The tr command is used to translate the file content like from lower case to upper case.
   ex - file.txt has sanjay 
    then - $cat file.txt | tr 'sanjay' 'SANJAY'
    it gives - SANJAY

35)$uniq - The uniq command is used to form a sorted list in which every word will occur only once.
  ex - sort file1.txt | uniq
  displays only uniq word.

36)$wc - The wc command is used to count the lines, words, and characters in a file.
 ex - $wc <file name> -  $wc file1.txt
   			4 4 33 file1.txt

37)$sort -   The sort command is used to sort files in alphabetical order.
  ex - $sort <file name> -> $sort file1.txt

38)$find - The find command is used to find a particular file within a directory. 
	It also supports various options to find a file such as byname, by type, by date, and more.
The following symbols are used after the find command:

(.) : For current directory name

(/) : For root	

to find perticular file - $find . -name "<filename.extention>" - > $find . -name "code.txt"
to find all txt file - $find . -name "*.txt"
form root find file - $fing / -name "file1.txt"
39)$date - The date command is used to display date, time, time zone, and more.
  ex - $date

40)$cal - The cal command is used to display the current month's calendar with the current date highlighted.
  ex - $cal

41)$sleep - The sleep command is used to hold the terminal by the specified amount of time. By default, it takes time in seconds.
  ex -  $sleep <time> - > $sleep 5

42)$df - The df command is used to display the disk space used in the file system. It displays the output as in the number of used blocks, available blocks, and the mounted directory.
   $df

43)$mail - The mail command is used to send emails from the command line.
  ex - $mail -s "Subject" <recipient address>  - > $mail -s "project completed successfully" lead123#gmail.com
             cc: 
		Hello there,
		hope you are doing well.

44)$exit - to log out of the commnd line.
  ex - $exit

45)$free - The $free command is used to display the "information of memory" used by the system.
	ex - $free

46)$top - The top command is used to display the information of processes running in Linux. the info provided is dynamic.
   ex - $top

47)$uname - $uname command will provide the information regarding the OS distribution, release version, 
	CPU architecture, and kernel version.
	ex - #uname -a
	-a --> Print the system information in a specific order
	-n --> Print the hostname
	-s --> Pronts the kernel name.
	-r --> Print the kernel version.
	-v --> Print the current kernel version.
	-m --> Print the machine hardware information.

48)$lsusb - $lsusb command is used to display the list or information of various USB devices connected 
	to the system.
	ex- $lsusb
49)$lsb_release - The $lsb_release command is used to display the installed Linux distributor ID, release 
		version, and codename.
	ex - lsb_release
50)$ip - The ip command is used to display the IP related details of the system.
	 ex - $ip
